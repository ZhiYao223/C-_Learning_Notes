//语法：数据类型 &别名 = 原名
//引用：给变量起别名
//int &b = a;  b = 20; cout << a <<endl;    a,b都是20，修改的是同一块内存
/*
& 在此不是求地址运算，而是起标识作用。
引用在声明时就必须对它进行初始化
引用声明完毕后，相当于目标变量名有两个名称，即该目标原名称和引用名，且不能再把该引用名作为其他变量名的别名。ra = 1;等价于 a = 1;
引用本身不是一种数据类型，因此引用本身不占存储单元，系统也不给引用分配存储单元。故：对引用求地址，就是对目标变量求地址。& ra与& a相等。
不能为数组建立引用，因为数组是由若干个元素组成，所以不能建立数组的别名。

引用的特点：
①一个变量可取多个别名。
②引用必须初始化。
③引用只能在初始化的时候引用一次 ，不能更改为转而引用其他变量
*/

#include <iostream>
using namespace std;
int main46()
{
	//引用必须初始化， int &b;  错误的
	//引用一但初始化后，就不可以更改了

	int a = 10;
	int &b = a;    //引用必须初始化 b=a=10
	cout << "a = " << a << endl;
	cout << "b = " << b << endl << endl;

	int  c = 20;   //错误，一旦初始化后，就不可更改
	//int &b = c;    //b已经是a的别名，不能再改成c的别名

	int d = 20;    //引用在初始化后，不可以改变 
	b = d;         //这是赋值操作，不是更改引a=b=20=d

	cout << "a = " << a << endl;
	cout << "b = " << b << endl;
	cout << "c = " << c << endl;
	cout << "d = " << d << endl;
	system("pause");
	return 0;
}